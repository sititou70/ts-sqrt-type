import { assert, IsExact } from 'conditional-type-checks';
import { AddInt } from './add';

// overflow test
assert<IsExact<AddInt<[1, 1], [1, 0]>, [0, 0, 1]>>(true);

// 1 + 1 = 2
assert<IsExact<AddInt<[1, 0], [1, 0]>, [0, 1]>>(true);
assert<IsExact<AddInt<[1, 0], [1, 0, 0]>, [0, 1, 0]>>(true);
assert<IsExact<AddInt<[1, 0, 0], [1, 0]>, [0, 1, 0]>>(true);
// 3 + 1 = 4
assert<IsExact<AddInt<[1, 1, 0], [1, 0, 0]>, [0, 0, 1]>>(true);
// 12345 + 67890 = 80235
assert<
  IsExact<
    AddInt<
      [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],
      [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1]
    >,
    [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1]
  >
>(true);
// 112233445566778899 + 123456789123456789 = 235690234690235688
// prettier-ignore
assert<
  IsExact<
  AddInt<
      [0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,1,0,1,1,0,1,1,1,0,1,1,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,0,0,1,1,0],
      [0,0,0,0,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,1,1,1,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,1,1,0,1,1,0,1,1,0]
    >,
    [0,0,0,0,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1,1,1,1,0,1,1,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,1,1,0,1,0,1,0,1,0,1,0,0,0,1,0,1,1]
  >
>(true);
